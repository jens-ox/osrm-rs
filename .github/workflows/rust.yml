name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - name: Install OSRM dependencies
      run: sudo apt install build-essential git cmake pkg-config libbz2-dev libxml2-dev libzip-dev libboost-all-dev lua5.2 liblua5.2-dev libtbb-dev
    - name: Checkout OSRM
      uses: actions/checkout@v3
      with:
        repository: Project-OSRM/osrm-backend
        path: './osrm-backend'

    - name: Restore OSRM build
      id: cache-osrm
      uses: actions/cache/restore@v3
      with:
        path: osrm-backend/build
        key: ${{ runner.os }}-osrm
    - name: Build OSRM step 1
      if: steps.cache-osrm.outputs.cache-hit != 'true'
      run: |
        cd osrm-backend
        mkdir -p build
        cd build
        cmake ..
    - name: Build OSRM step 2
      if: steps.cache-osrm.outputs.cache-hit != 'true'
      run: |
        cd osrm-backend/build
        cmake --build .
    - name: Install OSRM
      run: |
        cd osrm-backend/build
        sudo cmake --build . --target install
    - name: Save OSRM build
      id: cache-osrm-save
      uses: actions/cache/save@v3
      with:
        path: osrm-backend/build
        key: ${{ steps.cache-osrm.outputs.cache-primary-key }}
    - name: Build library
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - uses: giraffate/clippy-action@v1
      with:
        reporter: 'github-pr-check'
        github_token: ${{ secrets.GITHUB_TOKEN }}
